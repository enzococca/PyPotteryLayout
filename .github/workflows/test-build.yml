name: Test Build

on:
  push:
    branches: [ main, feature/gui-improvements ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.11']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Test PyInstaller build
      run: |
        pyinstaller --onefile --name PyPotteryLayout gui_app.py

    - name: Check executable exists (Windows)
      if: runner.os == 'Windows'
      run: |
        if (Test-Path "dist\PyPotteryLayout.exe") {
          Write-Host "✓ Windows executable built successfully"
          Get-Item "dist\PyPotteryLayout.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Error "✗ Windows executable not found"
          exit 1
        }

    - name: Check executable exists (Unix)
      if: runner.os != 'Windows'
      run: |
        if [ -f "dist/PyPotteryLayout" ]; then
          echo "✓ Executable built successfully"
          ls -lh dist/PyPotteryLayout
        else
          echo "✗ Executable not found"
          exit 1
        fi